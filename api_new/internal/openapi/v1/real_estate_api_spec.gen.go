// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
